# Import
(header) {
	header {
		Permissions-Policy "interest-cohort=()"
		Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
		X-Content-Type-Options "nosniff"
		X-Frame-Options "SAMEORIGIN"
		X-XSS-Protection "1; mode=block"
		Referrer-Policy "same-origin"
		Content-Security-Policy "upgrade-insecure-requests; frame-ancestors 'self'"
	}
}

(ipfilter) {
	@ban {
		not remote_ip 123.123.123.123
		path *
	}
	redir @ban https://wigger.one/ban/
}

(logs) {
	log {
		output file /var/log/access.log {
			roll_size 1gb
			roll_keep 5
			roll_keep_for 720h
		}
	}
}

(request_body) {
	request_body {
		max_size 15MB
	}
}

(git) {
    respond /.git/* "Access denied" 403 {
        close
    }
}

(handle_errors_404) {
	handle_errors {
		@404 expression {err.status_code} == 404
		handle @404 {
			rewrite * /404.html
			file_server
		}
	}
}

(handle_errors_index) {
	handle_errors {
		@404 expression {err.status_code} == 404
		handle @404 {
			rewrite * /index.html
			file_server
		}
	}
}

# Globals
{
    #CDN-ACME
    acme_dns cloudflare {{ cloudflare_api }}
    #Debug-Mode
    #debug
    #Metrics
    servers {
        metrics
    }
    #WebDAV
    order webdav before file_server
}

# Host
fi.wigger.cloud, nimona.wigger.cloud {
	redir https://wigger.cloud
}

# Services
cdn.kell3r.ch, cdn.braendli.dev, cdn.de-wit.dev, cdn.wigger.one {
    root * /usr/share/www/web-one/
    file_server {
        hide .git
        browse
    }

    header {
        Access-Control-Allow-Origin *
    }
    
    encode gzip
    
    import logs
    import git
}

api.wigger.one {
    handle {
        respond /* `{"http": "418 - I'm a teapot"}` 418
    }

    handle_path /ip {
        var realip {remote_host}
        
        @cf header CF-Connecting-IP *
        var @cf realip {header.CF-Connecting-IP}
        
        @xf header X-Forwarded-For *
        var @xf realip {header.X-Forwarded-For}
        
        templates
        header Content-Type text/plain
        respond "{var.realip}"
    }
        
    handle_path /health {
        respond `{"status": 200, "message": "OK!"}` 200
    }

    handle_path /data/* {
        root * /usr/share/www/web-api/
        file_server
    }
    
    encode gzip
    
    import handle_errors_404
    import header
    import logs
    import git
}

webdav.wigger.one {
	@dav path /*
	handle @dav {
		@notget not method GET
		route @notget {
			basic_auth {
					git $2a$14$rQ7TeAs/b.r8Kf6Lhnscg.MtmO0sxfcSOj2MzkWBXjRu7oJPuVWZu
			}
			webdav /* {
					root /usr/share/
					prefix /
			}
		}
	}

	encode gzip

	import header
	import logs
}

wigger.tld {
	root * /usr/share/www/web-tld/
	file_server

	encode gzip

	import handle_errors_404
	import header
	import logs
	import git
}

wigger.one {
	root * /usr/share/www/web-one/
	file_server

	encode gzip

	import handle_errors_404
	import header
	import logs
	import git
}

wigger.dev {
	root * /usr/share/www/web-dev/public/
	file_server

	encode gzip

	import handle_errors_404
	import header
	import logs
	import git
}

kell3r.ch {
	root * /usr/share/www/web-michael/
	file_server

	encode gzip

	import handle_errors_404
	import header
	import logs
	import git
}

braendli.dev {
	root * /usr/share/www/web-florin/
	file_server

	encode gzip

	import handle_errors_404
	import header
	import logs
	import git
}

de-wit.dev {
	root * /usr/share/www/web-elin/
	file_server

	encode gzip

	import handle_errors_404
	import header
	import logs
	import git
}
 
# Backend
*.fi.wigger.cloud {
    @caddy host caddy.fi.wigger.cloud
    handle @caddy {
        metrics
    }
    
    @node_exporter host node.fi.wigger.cloud
    handle @node_exporter {
        reverse_proxy localhost:4000
    }
    
    encode gzip
    
    import header
    import logs
}