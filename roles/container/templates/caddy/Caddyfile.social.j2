# Import
(header) {
	header {
		Permissions-Policy "interest-cohort=()"
		Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
		X-Content-Type-Options "nosniff"
		X-Frame-Options "SAMEORIGIN"
		X-XSS-Protection "1; mode=block"
		Referrer-Policy "same-origin"
		Content-Security-Policy "upgrade-insecure-requests; frame-ancestors 'self'"
	}
}

(ipfilter) {
	@ban {
		not remote_ip 123.123.123.123
		path *
	}
	redir @ban https://wigger.one/ban/
}

(logs) {
	log {
		output file /var/log/access.log {
			roll_size 1gb
			roll_keep 5
			roll_keep_for 720h
		}
	}
}

(git) {
	respond /.git/* "Access denied" 403 {
		close
	}
}

(request_body) {
	request_body {
		max_size 15MB
	}
}

(handle_errors_404) {
	handle_errors {
		@404 expression {err.status_code} == 404
		handle @404 {
			rewrite * /404.html
			file_server
		}
	}
}

(handle_errors_index) {
	handle_errors {
		@404 expression {err.status_code} == 404
		handle @404 {
			rewrite * /index.html
			file_server
		}
	}
}

{
    #CDN-ACME
    acme_dns cloudflare {{ cloudflare_api }}
    #Debug-Mode
    #debug
    #Metrics
    servers {
        metrics
    }
}

#Host
maverick.wigger.cloud {
	redir https://wigger.cloud
}

social.wigger.one {
	reverse_proxy mastodon_web:3000 {
		header_up X-Real-IP {http.request.header.CF-Connecting-IP}
		header_up X-Forwarded-For {http.request.header.CF-Connecting-IP}
	}

	reverse_proxy /api/v1/streaming* mastodon_streaming:4000 {
		header_up X-Real-IP {http.request.header.CF-Connecting-IP}
		header_up X-Forwarded-For {http.request.header.CF-Connecting-IP}
	}

	header /sw.js  Cache-Control "public, max-age=0";
	header /emoji* Cache-Control "public, max-age=31536000, immutable"
	header /packs* Cache-Control "public, max-age=31536000, immutable"
	header /system/accounts/avatars* Cache-Control "public, max-age=31536000, immutable"
	header /system/media_attachments/files* Cache-Control "public, max-age=31536000, immutable"
	header Access-Control-Allow-Origin *

	encode gzip

	import header
	import logs
}

news.wigger.one {
	reverse_proxy lemmy_web:1234 {
        header_up X-Real-IP {http.request.header.CF-Connecting-IP}
        header_up X-Forwarded-For {http.request.header.CF-Connecting-IP}
    }

    @lemmy path /api/* /pictrs/* /feeds/* /nodeinfo/* /.well-known/*
	handle @lemmy {
		reverse_proxy lemmy_app:8536 {
            header_up X-Real-IP {http.request.header.CF-Connecting-IP}
            header_up X-Forwarded-For {http.request.header.CF-Connecting-IP}
        }
	}

	@lemmy-hdr header Accept application/*
	handle @lemmy-hdr {
		reverse_proxy lemmy_app:8536 {
            header_up X-Real-IP {http.request.header.CF-Connecting-IP}
            header_up X-Forwarded-For {http.request.header.CF-Connecting-IP}
        }
	}

	@lemmy-post method POST
	handle @lemmy-post {
			reverse_proxy lemmy_app:8536  {
            header_up X-Real-IP {http.request.header.CF-Connecting-IP}
            header_up X-Forwarded-For {http.request.header.CF-Connecting-IP}
        }
	}

	encode gzip

	import header
	import logs
}


www.wigger.one {
    @matrix path /_matrix/* /.well-known/matrix/*

    handle @matrix {
        reverse_proxy /_matrix/* dendrite_app:8008 {
            header_up X-Real-IP {http.request.header.CF-Connecting-IP}
            header_up X-Forwarded-For {http.request.header.CF-Connecting-IP}
        }

        header /.well-known/matrix/* {
            Content-Type application/json
            Access-Control-Allow-Origin *
        }

        respond /.well-known/matrix/server `{"m.server": "www.wigger.one:443"}`
        respond /.well-known/matrix/client `{"m.homeserver":{"base_url":"https://www.wigger.one"},"m.identity_server":{"base_url":"https://vector.im"}}`
    }

	handle {
		redir https://wigger.one
	}

    encode gzip
    
    import header
    import logs
}

#Backend
kopia-maverick.wigger.cloud {
	reverse_proxy ip.srv:4001
	encode gzip

	import header
	import logs
}

caddy-maverick.wigger.cloud {
	metrics
	encode gzip

	import header
	import logs
}

node-maverick.wigger.cloud {
    reverse_proxy ip.srv:4000
    encode gzip
    
    import header
    import logs
}

